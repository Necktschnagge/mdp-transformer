variables:
 - name: project_name
   value: mdp-transformer

trigger:
  branches:
    include:
    - '*'
    exclude:
    - artifacts

stages:

 - stage: A

   jobs:

    - job: compile

      strategy:
        matrix:

          ubuntu_22_04:
            imageName: 'ubuntu-22.04'
            the_name: 'Azure Pipelines'

          ubuntu_20_04_gcc_9:
            imageName: 'ubuntu-20.04'
            the_name: 'Azure Pipelines'

          mac_12:
            imageName: 'macos-12'
            the_name: 'Azure Pipelines'
          mac_11:
            imageName: 'macos-11'
            the_name: 'Azure Pipelines'

          windows_2022:
            imageName: 'windows-2022'
            the_name: 'Azure Pipelines'

          windows_2019:
            imageName: 'windows-2019'
            the_name: 'Azure Pipelines'

      pool:
        vmImage: $(imageName)
        name: $(the_name)

      steps:
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
       - script: sudo apt-get update && sudo apt-get install libboost-all-dev libtbb-dev
         displayName: "Linux: Install Boost"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
       - script: brew install boost
         displayName: "Mac: Install Boost"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Darwin' ))
       - script:  choco install boost-msvc-14.2 #nuget install boost_regex-vc142 -Version 1.76.0
         displayName: "Windows: Install Boost"#
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT'))
       - script: cmake -S . -B ./build/
         displayName: "CMake: Create Project"
         condition: succeeded()
       - script: cmake --build ./build
         displayName: "CMake: Compile and Link"
         condition: succeeded()
       - script: ./build/test/TEST-$(project_name)
         displayName: "Run Tests on Linux / Mac OS"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: .\build\Debug\TEST-$(project_name).exe
         displayName: "Run Tests on Windows"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))


    - job: runtime_check

      dependsOn: compile

      strategy:
        matrix:

          ubuntu_22_04:
            imageName: 'ubuntu-22.04'
            the_name: 'Azure Pipelines'

      pool:
        vmImage: $(imageName)
        name: $(the_name)

      steps:
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
       - script: cmake -S . -B ./build/
         displayName: "CMake: Create Project"
         condition: succeeded()
       - script: cmake --build ./build
         displayName: "CMake: Compile and Link"
         condition: succeeded()
       - script: ./build/test/TEST-$(project_name)
         displayName: "Run Tests on Linux / Mac OS"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
       - script: ./build/src/$(project_name) --run_on_server
         displayName: "Runtime Check on Linux"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux'))
       - script: .\build\Debug\TEST-$(project_name).exe
         displayName: "Run Tests on Windows"
         condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
